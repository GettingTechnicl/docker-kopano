#!/bin/bash
#
# 10-kopano-common
#
# Kopano now installs without any cfg files, so we just write custom values
# into their target cfg file.
#
# Variables defined in Dockerfile
# DOCKER_CONF_DIR1 DOCKER_CONF_DIR2 DOCKER_ACME_SSL_DIR DOCKER_APPL_SSL_DIR
#

#
# Configuration
#
DOCKER_CONF_DIR1=${DOCKER_CONF_DIR1-/etc/kopano}
DOCKER_CONF_DIR2=${DOCKER_CONF_DIR2-/usr/share/z-push}
DOCKER_MAN5_DIR=${DOCKER_MAN5_DIR-/usr/share/man/man5/}
DOCKER_APPL_SSL_CERT=${DOCKER_APPL_SSL_CERT-$DOCKER_APPL_SSL_DIR/cert.pem}
DOCKER_APPL_SSL_KEY=${DOCKER_APPL_SSL_KEY-$DOCKER_APPL_SSL_DIR/priv_key.pem}
DOCKER_LDAP_PMAP_FILE=${DOCKER_LDAP_PMAP_FILE-/usr/share/kopano/ldap.propmap.cfg}
DOCKER_LDAP_SERVICES=${DOCKER_LDAP_SERVICES-archiver dagent gateway ical ldap search server spamd spooler}
sqlstate_cfg_file=$DOCKER_CONF_DIR2/backend/sqlstatemachine/config.php
zpush_cfg_file=$DOCKER_CONF_DIR2/config.php
webapp_cfg_file=$DOCKER_CONF_DIR1/webapp/config.php
webapp_mdm_cfg_file=$DOCKER_CONF_DIR1/webapp/config-mdm.php
webapp_smime_cfg_file=$DOCKER_CONF_DIR1/webapp/config-smime.php


#
# CLI commands
#
list_parms() {
	local services="$DOCKER_LDAP_SERVICES $DAGENT_PLUGINS"
	[ $# -ge 0 ] && services="$@"
	for service in $services; do
		[ $# -ne 1 ] && echo "# $service"
		local man_file=$(kopano_gen_filename_man $service)
		kopano_get_envvars_man $man_file
		kopano_get_envvars_ext $service
		[ $# -ne 1 ] && echo
	done
}

#
# Apply environment variables to configuration files.
# Use all valid keys (variables) for a service to see if there is a envvar with
# identical name, if so apply its value to the config file.
# With kopano-core use man page files to lookup valid keys.
# With kopano-webapp and z-push use installed config file to find valid keys.
#
kopano_apply_envvars_core() {
	kopano_enable_envvars_plugin
	for service in $DOCKER_LDAP_SERVICES $DAGENT_PLUGINS; do
		kopano_apply_envvars_cfg $service
	done
}

kopano_apply_envvars_webapp() {
	kopano_apply_envvars_php $webapp_cfg_file
	kopano_apply_envvars_php $webapp_mdm_cfg_file
	kopano_apply_envvars_php $webapp_smime_cfg_file
}

kopano_apply_envvars_zpush() {
	kopano_apply_envvars_php $sqlstate_cfg_file
	kopano_apply_envvars_php $zpush_cfg_file
}

#
# kopano_apply_envvars_cfg <service>
#
kopano_apply_envvars_cfg() {
	local service=$1
	local cfg_file=$(kopano_gen_filename_cfg $service)
	local man_file=$(kopano_gen_filename_man $service)
	local env_vars="$(kopano_get_envvars_ext $service)"
	if [ -f $man_file ]; then
		env_vars="$(kopano_get_envvars_man $man_file) $env_vars"
	else
		dc_log 6 "Could not find $man_file"
	fi
	if [ -e $cfg_file ]; then
		mv -f $cfg_file $cfg_file.bak
	fi
	for env_var in $env_vars; do
		kopano_set_envvars_cfg $service $env_var
	done
}

kopano_apply_envvars_php() {
	local cfg_file=$1
	if [ -e $cfg_file ]; then
		local env_vars="$(kopano_get_envvars_php $cfg_file)"
		for env_var in $env_vars; do
			if [ -n "${!env_var}" ]; then
				[ -z "${changed+x}" ] && local changed= && cp -f $cfg_file $cfg_file.bak
				dc_log 5 "Setting ${env_var} = ${!env_var} in $cfg_file"
				sed -ri "s/(\s*define[('\"]+${env_var}['\",]+).+/\1 ${!env_var});/Ig" $cfg_file
			fi
		done
	fi
}

#
# kopano_set_envvars_cfg <service> <envvar name> [explicit parameter name]
#
kopano_set_envvars_cfg() {
	local service=$1
	local cfg_file=$(kopano_gen_filename_cfg $service)
	local env_var=$2
	local uniq_var=${service^^}_${env_var}
	local cfg_par="${3-$env_var =}"
	if [ -n "${!uniq_var+x}" ]; then
		local env_val="${!uniq_var}"
	elif [ -n "${!env_var+x}" ]; then
		local env_val="${!env_var}"
	fi
	if [ -n "${env_val+x}" ]; then
		dc_log 5 "Setting ${cfg_par,,} ${env_val} in $cfg_file"
		echo ${cfg_par,,} ${env_val} >> $cfg_file
	fi
}

#
# External parameters
# services without a man file or additional parameters are listed here.
#
kopano_get_envvars_ext() {
	local service=$1
	local vars
	case $service in
		movetopublicldap)
			vars="ldap_public_folder_attribute ldap_public_folder_attribute_token"
			;;
	esac
	echo $vars | tr "[:lower:]" "[:upper:]" | tr " " "\n" | sort -u
}

#
# Python plugins
#
kopano_enable_envvars_plugin() {
	for service in dagent spooler; do
		local envvar=${service^^}_PLUGINS
		for plugin in ${!envvar}; do
			local pyfile=$(find /usr/share/kopano* -name ${plugin}.py)
			if [ -z "$pyfile" ]; then
				dc_log 5 "Unable to locate ${service} python plugin ${plugin}"
			else
				dc_log 5 "Enabling ${service} python plugin ${plugin}"
				mkdir -p $DOCKER_CONF_DIR1/${service}
				ln -sf ${pyfile} $DOCKER_CONF_DIR1/${service}
				export ${service^^}_PLUGIN_PATH=$DOCKER_CONF_DIR1/${service}
				export ${service^^}_PLUGIN_ENABLED=yes
			fi
		done
	done
}

#
# Helpers
#
kopano_gen_filename_man() { echo $DOCKER_MAN5_DIR/kopano-$1.cfg.5.gz ;}
kopano_gen_filename_cfg() { echo $DOCKER_CONF_DIR1/$1.cfg ;}
kopano_get_envvars_man() { zcat $1 | sed -r "/^\.SS/!d;{s/^\.SS (.*)/\U\1/g;s/,//g}" | sort -u ;}
kopano_get_envvars_php() { sed -nr "/define\(/Is/.*define\(['\"](.*)['\"], .*/\1/Ip" $1 | sort -u ;}

#
# Update SSL_CERTIFICATE_FILE and SSL_PRIVATE_KEY_FILE.
#
kopano_export_tls_cert() {
	if ([ -f "$DOCKER_APPL_SSL_CERT" ] && [ -f "$DOCKER_APPL_SSL_KEY" ]); then
		export SSL_CERTIFICATE_FILE=${SSL_CERTIFICATE_FILE-$DOCKER_APPL_SSL_CERT}
		export SSL_PRIVATE_KEY_FILE=${SSL_PRIVATE_KEY_FILE-$DOCKER_APPL_SSL_KEY}
	fi
	if ([ -f "$SSL_CERTIFICATE_FILE" ] && [ -f "$SSL_PRIVATE_KEY_FILE" ]); then
		dc_cond_chown $DOCKER_APPL_RUNAS $SSL_CERTIFICATE_FILE $SSL_PRIVATE_KEY_FILE
	fi
}

#
# Generate self signed certificate if any of IMAPS_LISTEN, POP3S_LISTEN or
# ICALS_LISTEN is no-empty but no certificates are given.
#
kopano_generate_tls_cert() {
	for prot in IMAPS_LISTEN POP3S_LISTEN ICALS_LISTEN; do
		if [ -n "${!prot}" ]; then
			local secure="$prot=${!prot}"
			break
		fi
	done
	if ([ -z "$SSL_CERTIFICATE_FILE" ] && [ -n "$secure" ] && dc_is_installed openssl); then
		dc_log 4 "$secure, but no certs given, so generating self-signed cert for host $HOSTNAME"
		mkdir -p $DOCKER_APPL_SSL_DIR
		dc_tls_setup_selfsigned_cert $DOCKER_APPL_SSL_CERT $DOCKER_APPL_SSL_KEY
	fi
}

#
# LDAP directives
#
kopano_apply_envvar_propmap() {
	local service=ldap
	local cfg_file=$(kopano_gen_filename_cfg $service)
	local env_var=LDAP_PROPMAP
	if [ -n "${!env_var+x}" ]; then
		if [ -z "${!env_var}" ]; then
			typeset "$env_var=$DOCKER_LDAP_PMAP_FILE"
		elif [ ! -e "${!env_var}" ]; then
			dc_log 5 "No ${!env_var} so copying $DOCKER_LDAP_PMAP_FILE there."
			cp -f $DOCKER_LDAP_PMAP_FILE ${!env_var}
		fi
		kopano_set_envvars_cfg $service $env_var '!propmap'
	fi
}
